name: Dev deploy Heroku

on:
  pull_request:
    types: [opened, reopened, synchronize]
    branches:
      - develop
jobs:
  check-branch-name:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions-ecosystem/action-regex-match@v2
        id: regex-match
        with:
          text: ${{ github.head_ref }}
          regex: "^TYNE-[0-9]+[/](feature|fix|test|bug|poc)+[/][a-zA-Z]+"
      - uses: actions-ecosystem/action-add-labels@v1
      - run: |
          echo ${{ steps.regex-match.outputs.match}}
          if ${{ steps.regex-match.outputs.match != '' }}; then
            echo "Your branch matches with the pattern successfully."
          else
            echo "Your branch doesn't match with the pattern TYNE-[0-9]+[/](feature|fix|test|bug|poc)+[/][a-zA-Z]+"
            echo "Please check your branch name, create a new branch in your machine, then"
            echo "push the new branch."
            echo "Correct branch names examples:"
            echo "TYNE-{number}/{feature|fix|test|bug|poc}/message-about-the-branch-topic"
            echo "TYNE-598/feature/new-client-api"
            exit 1
          fi
  build:
    needs: [check-branch-name]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          node-version: "12"
      - run: node init-env.js
        env:
          ENV_DEV: ${{ secrets.ENV_DEV }}
          ENV_PROD: ${{ secrets.ENV_PROD }}
      - uses: akhileshns/heroku-deploy@v3.12.12
        with:
          heroku_api_key: ${{ secrets.HEROKU_API_KEY }}
          heroku_app_name: ${{ secrets.HEROKU_DEV_APP_NAME }}
          heroku_email: ${{ secrets.HEROKU_EMAIL }}
          dontautocreate: false
          usedocker: true
          justlogin: true
      - name: "Login to heroku registry"
        run: heroku container:login

      - name: "Build and push to heroku registry"
        run: heroku container:push web --app ${{ secrets.HEROKU_DEV_APP_NAME }}

      - name: "Releases the container"
        run: heroku container:release web --app ${{ secrets.HEROKU_DEV_APP_NAME }}

  discord-notification:
    needs: [build]
    runs-on: ubuntu-latest
    steps:
      - uses: sarisia/actions-status-discord@v1
        if: always()
        with:
          webhook: ${{ secrets.DISCORD_DEV_PIPELINE }}
          username: GitHub Actions
          title: "A new version was deployed in DEV/QA"
          description: "Deployed in Heroku"
